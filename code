// Returns a random DNA base
const returnRandBase = () => {
  const dnaBases = ['A', 'T', 'C', 'G'];
  return dnaBases[Math.floor(Math.random() * 4)];
};

// Returns a random single stand of DNA containing 15 bases
const mockUpStrand = () => {
  const newStrand = [];
  for (let i = 0; i < 15; i++) {
    newStrand.push(returnRandBase());
  }
  return newStrand;
};
const pAequorFactory = (num, bases) => {
  return ({
    _specimenNum: num,
    _dna: bases,
    mutate() {
      let index = Math.floor(Math.random() * dna.length);
      let newBase = returnRandBase();
      while (newBase === this._dna[index]){
        newBase = returnRandBase();
      }
      this.dna[index] = newBase;
      return this._dna;
    },
    compareDNA(pAequor){
      let counter = 0;
      for (let h = 0; h < dna.length; h++){
        if(pAequor.dna[h] === dna[h]){
          counter ++;
        }
      }
      console.log(`specimen #${this.specimenNum} and specimen #${pAeqour.specimenNum} have ${Math.round((counter/15)*100)} DNA in common`)
    },
    willLikelysSurvice() {
      let percent = 0;
      for (let i = 0; i <= this._dna.length; i++){
        if (this._dna[i] === 'C'| this._dna[i] === 'G'){
          percent ++;
        }
      }
      percent = (((percent/this._dna.length)*100).toFixed(1));
      if (percent >=60){
        return true;
      } else {
        return false;
      }
    }
  })
};
